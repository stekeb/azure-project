{
	"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"profiles_front_door_profil_name": {
			"defaultValue": "front-door-profil",
			"type": "String"
		},
		"serverfarms_myAppServicePlan_name": {
			"defaultValue": "myAppServicePlan",
			"type": "String"
		},
		"sites_myexpressappbackendskb_name": {
			"defaultValue": "myexpressappbackendskb",
			"type": "String"
		},
		"virtualNetworks_myStartupVNet_name": {
			"defaultValue": "myStartupVNet",
			"type": "String"
		},
		"registries_mystartupskb_name": {
			"defaultValue": "mystartupskb",
			"type": "String"
		},
		"networkSecurityGroups_dbSubnet_nsg_name": {
			"defaultValue": "dbSubnet-nsg",
			"type": "String"
		},
		"storageAccounts_mystartupstorageskb_name": {
			"defaultValue": "mystartupstorageskb",
			"type": "String"
		},
		"frontdoorwebapplicationfirewallpolicies_webappwaf_name": {
			"defaultValue": "webappwaf",
			"type": "String"
		},
		"flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name": {
			"defaultValue": "mypgserver-rg-24-09-on-keilbach-steffen",
			"type": "String"
		},
		"privateDnsZones_mystartup_postgres_private_postgres_database_azure_com_name": {
			"defaultValue": "mystartup-postgres.private.postgres.database.azure.com",
			"type": "String"
		}
	},
	"variables": {},
	"resources": [
		{
			"type": "Microsoft.Cdn/profiles",
			"apiVersion": "2025-04-15",
			"name": "[parameters('profiles_front_door_profil_name')]",
			"location": "Global",
			"sku": {
				"name": "Standard_AzureFrontDoor"
			},
			"kind": "frontdoor",
			"properties": {
				"originResponseTimeoutSeconds": 60
			}
		},
		{
			"type": "Microsoft.ContainerRegistry/registries",
			"apiVersion": "2025-05-01-preview",
			"name": "[parameters('registries_mystartupskb_name')]",
			"location": "westeurope",
			"sku": {
				"name": "Basic",
				"tier": "Basic"
			},
			"properties": {
				"adminUserEnabled": true,
				"policies": {
					"quarantinePolicy": {
						"status": "disabled"
					},
					"trustPolicy": {
						"type": "Notary",
						"status": "disabled"
					},
					"retentionPolicy": {
						"days": 7,
						"status": "disabled"
					},
					"exportPolicy": {
						"status": "enabled"
					},
					"azureADAuthenticationAsArmPolicy": {
						"status": "enabled"
					},
					"softDeletePolicy": {
						"retentionDays": 7,
						"status": "disabled"
					}
				},
				"encryption": {
					"status": "disabled"
				},
				"dataEndpointEnabled": false,
				"publicNetworkAccess": "Enabled",
				"networkRuleBypassOptions": "AzureServices",
				"networkRuleBypassAllowedForTasks": false,
				"zoneRedundancy": "Disabled",
				"anonymousPullEnabled": false,
				"metadataSearch": "Disabled",
				"roleAssignmentMode": "LegacyRegistryPermissions",
				"autoGeneratedDomainNameLabelScope": "Unsecure"
			}
		},
		{
			"type": "Microsoft.Network/frontdoorwebapplicationfirewallpolicies",
			"apiVersion": "2025-03-01",
			"name": "[parameters('frontdoorwebapplicationfirewallpolicies_webappwaf_name')]",
			"location": "Global",
			"sku": {
				"name": "Standard_AzureFrontDoor"
			},
			"properties": {
				"policySettings": {
					"enabledState": "Enabled",
					"mode": "Detection",
					"requestBodyCheck": "Enabled"
				},
				"customRules": {
					"rules": []
				},
				"managedRules": {
					"managedRuleSets": []
				}
			}
		},
		{
			"type": "Microsoft.Network/networkSecurityGroups",
			"apiVersion": "2024-07-01",
			"name": "[parameters('networkSecurityGroups_dbSubnet_nsg_name')]",
			"location": "westeurope",
			"properties": {
				"securityRules": [
					{
						"name": "Allow-Postgres-From-WebSubnet",
						"id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_dbSubnet_nsg_name'), 'Allow-Postgres-From-WebSubnet')]",
						"type": "Microsoft.Network/networkSecurityGroups/securityRules",
						"properties": {
							"protocol": "Tcp",
							"sourcePortRange": "*",
							"destinationPortRange": "5432",
							"sourceAddressPrefix": "10.0.1.0/24",
							"destinationAddressPrefix": "10.0.0.0/24",
							"access": "Allow",
							"priority": 100,
							"direction": "Inbound",
							"sourcePortRanges": [],
							"destinationPortRanges": [],
							"sourceAddressPrefixes": [],
							"destinationAddressPrefixes": []
						}
					}
				]
			}
		},
		{
			"type": "Microsoft.Network/privateDnsZones",
			"apiVersion": "2024-06-01",
			"name": "[parameters('privateDnsZones_mystartup_postgres_private_postgres_database_azure_com_name')]",
			"location": "global",
			"properties": {}
		},
		{
			"type": "Microsoft.Storage/storageAccounts",
			"apiVersion": "2025-01-01",
			"name": "[parameters('storageAccounts_mystartupstorageskb_name')]",
			"location": "westeurope",
			"sku": {
				"name": "Standard_LRS",
				"tier": "Standard"
			},
			"kind": "StorageV2",
			"properties": {
				"allowCrossTenantReplication": false,
				"minimumTlsVersion": "TLS1_0",
				"allowBlobPublicAccess": false,
				"networkAcls": {
					"bypass": "AzureServices",
					"virtualNetworkRules": [],
					"ipRules": [],
					"defaultAction": "Allow"
				},
				"supportsHttpsTrafficOnly": true,
				"encryption": {
					"services": {
						"file": {
							"keyType": "Account",
							"enabled": true
						},
						"blob": {
							"keyType": "Account",
							"enabled": true
						}
					},
					"keySource": "Microsoft.Storage"
				},
				"accessTier": "Hot"
			}
		},
		{
			"type": "Microsoft.Web/serverfarms",
			"apiVersion": "2024-11-01",
			"name": "[parameters('serverfarms_myAppServicePlan_name')]",
			"location": "West Europe",
			"sku": {
				"name": "S1",
				"tier": "Standard",
				"size": "S1",
				"family": "S",
				"capacity": 1
			},
			"kind": "linux",
			"properties": {
				"perSiteScaling": false,
				"elasticScaleEnabled": false,
				"maximumElasticWorkerCount": 1,
				"isSpot": false,
				"reserved": true,
				"isXenon": false,
				"hyperV": false,
				"targetWorkerCount": 0,
				"targetWorkerSizeId": 0,
				"zoneRedundant": false,
				"asyncScalingEnabled": false
			}
		},
		{
			"type": "Microsoft.Cdn/profiles/afdendpoints",
			"apiVersion": "2025-04-15",
			"name": "[concat(parameters('profiles_front_door_profil_name'), '/web-app-skb')]",
			"location": "Global",
			"dependsOn": [
				"[resourceId('Microsoft.Cdn/profiles', parameters('profiles_front_door_profil_name'))]"
			],
			"properties": {
				"enabledState": "Enabled"
			}
		},
		{
			"type": "Microsoft.Cdn/profiles/origingroups",
			"apiVersion": "2025-04-15",
			"name": "[concat(parameters('profiles_front_door_profil_name'), '/default-origin-group')]",
			"dependsOn": [
				"[resourceId('Microsoft.Cdn/profiles', parameters('profiles_front_door_profil_name'))]"
			],
			"properties": {
				"loadBalancingSettings": {
					"sampleSize": 4,
					"successfulSamplesRequired": 3,
					"additionalLatencyInMilliseconds": 50
				},
				"healthProbeSettings": {
					"probePath": "/",
					"probeRequestType": "HEAD",
					"probeProtocol": "Http",
					"probeIntervalInSeconds": 100
				},
				"sessionAffinityState": "Disabled"
			}
		},
		{
			"type": "Microsoft.ContainerRegistry/registries/scopeMaps",
			"apiVersion": "2025-05-01-preview",
			"name": "[concat(parameters('registries_mystartupskb_name'), '/_repositories_admin')]",
			"dependsOn": [
				"[resourceId('Microsoft.ContainerRegistry/registries', parameters('registries_mystartupskb_name'))]"
			],
			"properties": {
				"description": "Can perform all read, write and delete operations on the registry",
				"actions": [
					"repositories/*/metadata/read",
					"repositories/*/metadata/write",
					"repositories/*/content/read",
					"repositories/*/content/write",
					"repositories/*/content/delete"
				]
			}
		},
		{
			"type": "Microsoft.ContainerRegistry/registries/scopeMaps",
			"apiVersion": "2025-05-01-preview",
			"name": "[concat(parameters('registries_mystartupskb_name'), '/_repositories_pull')]",
			"dependsOn": [
				"[resourceId('Microsoft.ContainerRegistry/registries', parameters('registries_mystartupskb_name'))]"
			],
			"properties": {
				"description": "Can pull any repository of the registry",
				"actions": [
					"repositories/*/content/read"
				]
			}
		},
		{
			"type": "Microsoft.ContainerRegistry/registries/scopeMaps",
			"apiVersion": "2025-05-01-preview",
			"name": "[concat(parameters('registries_mystartupskb_name'), '/_repositories_pull_metadata_read')]",
			"dependsOn": [
				"[resourceId('Microsoft.ContainerRegistry/registries', parameters('registries_mystartupskb_name'))]"
			],
			"properties": {
				"description": "Can perform all read operations on the registry",
				"actions": [
					"repositories/*/content/read",
					"repositories/*/metadata/read"
				]
			}
		},
		{
			"type": "Microsoft.ContainerRegistry/registries/scopeMaps",
			"apiVersion": "2025-05-01-preview",
			"name": "[concat(parameters('registries_mystartupskb_name'), '/_repositories_push')]",
			"dependsOn": [
				"[resourceId('Microsoft.ContainerRegistry/registries', parameters('registries_mystartupskb_name'))]"
			],
			"properties": {
				"description": "Can push to any repository of the registry",
				"actions": [
					"repositories/*/content/read",
					"repositories/*/content/write"
				]
			}
		},
		{
			"type": "Microsoft.ContainerRegistry/registries/scopeMaps",
			"apiVersion": "2025-05-01-preview",
			"name": "[concat(parameters('registries_mystartupskb_name'), '/_repositories_push_metadata_write')]",
			"dependsOn": [
				"[resourceId('Microsoft.ContainerRegistry/registries', parameters('registries_mystartupskb_name'))]"
			],
			"properties": {
				"description": "Can perform all read and write operations on the registry",
				"actions": [
					"repositories/*/metadata/read",
					"repositories/*/metadata/write",
					"repositories/*/content/read",
					"repositories/*/content/write"
				]
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/advancedThreatProtectionSettings",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/Default')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"state": "Disabled"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/backups",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/backup_638901484616129772')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			]
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/allow_alter_system')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "on",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/allow_in_place_tablespaces')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "off",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/allow_system_table_mods')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "off",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/application_name')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/archive_cleanup_command')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/archive_command')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "BlobLogUpload.sh %f %p",
				"source": "user-override"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/archive_library')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/archive_mode')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "always",
				"source": "user-override"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/archive_timeout')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "300",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/array_nulls')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "on",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/authentication_timeout')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "30",
				"source": "user-override"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/auto_explain.log_analyze')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "off",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/auto_explain.log_buffers')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "off",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/auto_explain.log_format')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "text",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/auto_explain.log_level')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "log",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/auto_explain.log_min_duration')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "-1",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/auto_explain.log_nested_statements')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "off",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/auto_explain.log_settings')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "off",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/auto_explain.log_timing')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "on",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/auto_explain.log_triggers')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "off",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/auto_explain.log_verbose')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "off",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/auto_explain.log_wal')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "off",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/auto_explain.sample_rate')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "1.0",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/autovacuum')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "on",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/autovacuum_analyze_scale_factor')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "0.1",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/autovacuum_analyze_threshold')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "50",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/autovacuum_freeze_max_age')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "200000000",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/autovacuum_max_workers')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "3",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/autovacuum_multixact_freeze_max_age')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "400000000",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/autovacuum_naptime')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "60",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/autovacuum_vacuum_cost_delay')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "2",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/autovacuum_vacuum_cost_limit')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "-1",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/autovacuum_vacuum_insert_scale_factor')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "0.2",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/autovacuum_vacuum_insert_threshold')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "1000",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/autovacuum_vacuum_scale_factor')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "0.2",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/autovacuum_vacuum_threshold')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "50",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/autovacuum_work_mem')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "-1",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/azure.accepted_password_auth_method')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "md5,scram-sha-256",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/azure.enable_temp_tablespaces_on_local_ssd')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "on",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/azure.extensions')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/azure.migration_copy_with_binary')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "off",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/azure.migration_skip_analyze')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "off",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/azure.migration_skip_extensions')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "off",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/azure.migration_skip_large_objects')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "off",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/azure.migration_skip_role_user')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "on",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/azure.migration_table_split_size')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "20480",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/azure.service_principal_id')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/azure.service_principal_tenant_id')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/azure.single_to_flex_migration')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "off",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/azure_cdc.change_batch_buffer_size')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "16",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/azure_cdc.change_batch_export_timeout')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "30",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/azure_cdc.max_fabric_mirrors')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "3",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/azure_cdc.max_snapshot_workers')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "3",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/azure_cdc.onelake_buffer_size')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "100",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/azure_cdc.parquet_compression')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "zstd",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/azure_cdc.snapshot_buffer_size')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "1000",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/azure_cdc.snapshot_export_timeout')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "180",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/azure_storage.allow_network_access')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "on",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/azure_storage.blob_block_size_mb')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "256",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/azure_storage.log_level')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "log",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/azure_storage.public_account_access')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "on",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/backend_flush_after')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "256",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/backslash_quote')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "safe_encoding",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/backtrace_functions')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/bgwriter_delay')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "20",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/bgwriter_flush_after')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "64",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/bgwriter_lru_maxpages')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "100",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/bgwriter_lru_multiplier')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "2",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/block_size')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "8192",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/bonjour')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "off",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/bonjour_name')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/bytea_output')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "hex",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/check_function_bodies')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "on",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/checkpoint_completion_target')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "0.9",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/checkpoint_flush_after')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "32",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/checkpoint_timeout')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "600",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/checkpoint_warning')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "30",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/client_connection_check_interval')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "0",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/client_encoding')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "UTF8",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/client_min_messages')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "notice",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/cluster_name')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/commit_delay')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "0",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/commit_siblings')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "5",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/commit_timestamp_buffers')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "512",
				"source": "user-override"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/compute_query_id')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "auto",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/config_file')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "/datadrive/pg/data/postgresql.conf",
				"source": "user-override"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/connection_throttle.bucket_limit')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "2000",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/connection_throttle.enable')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "off",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/connection_throttle.factor_bias')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "0.8",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/connection_throttle.hash_entries_max')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "500",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/connection_throttle.reset_time')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "120",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/connection_throttle.restore_factor')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "2",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/connection_throttle.update_time')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "20",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/constraint_exclusion')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "partition",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/cpu_index_tuple_cost')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "0.005",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/cpu_operator_cost')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "0.0025",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/cpu_tuple_cost')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "0.01",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/cron.database_name')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "postgres",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/cron.log_run')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "on",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/cron.log_statement')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "on",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/cron.max_running_jobs')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "32",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/cursor_tuple_fraction')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "0.1",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/data_checksums')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "on",
				"source": "user-override"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/data_directory')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "/datadrive/pg/data",
				"source": "user-override"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/data_directory_mode')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "0700",
				"source": "user-override"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/data_sync_retry')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "off",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/DateStyle')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "ISO, MDY",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/db_user_namespace')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "off",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/deadlock_timeout')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "1000",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/debug_assertions')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "off",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/debug_discard_caches')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "0",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/debug_parallel_query')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "off",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/debug_pretty_print')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "on",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/debug_print_parse')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "off",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/debug_print_plan')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "off",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/debug_print_rewritten')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "off",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/default_statistics_target')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "100",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/default_table_access_method')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "heap",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/default_tablespace')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/default_text_search_config')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "pg_catalog.english",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/default_toast_compression')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "pglz",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/default_transaction_deferrable')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "off",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/default_transaction_isolation')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "read committed",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/default_transaction_read_only')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "off",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/duckdb.max_memory')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "1024",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/duckdb.max_workers_per_postgres_scan')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "2",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/duckdb.memory_limit')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "1024",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/duckdb.threads')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "-1",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/duckdb.worker_threads')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "-1",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/dynamic_library_path')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "$libdir",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/dynamic_shared_memory_type')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "posix",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/effective_cache_size')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "786432",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/effective_io_concurrency')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "1",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/enable_async_append')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "on",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/enable_bitmapscan')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "on",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/enable_gathermerge')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "on",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/enable_hashagg')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "on",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/enable_hashjoin')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "on",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/enable_incremental_sort')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "on",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/enable_indexonlyscan')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "on",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/enable_indexscan')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "on",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/enable_material')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "on",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/enable_memoize')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "on",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/enable_mergejoin')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "on",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/enable_nestloop')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "on",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/enable_parallel_append')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "on",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/enable_parallel_hash')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "on",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/enable_partition_pruning')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "on",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/enable_partitionwise_aggregate')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "off",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/enable_partitionwise_join')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "off",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/enable_seqscan')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "on",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/enable_sort')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "on",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/enable_tidscan')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "on",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/escape_string_warning')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "on",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/event_source')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "PostgreSQL",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/event_triggers')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "on",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/exit_on_error')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "off",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/external_pid_file')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/extra_float_digits')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "1",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/from_collapse_limit')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "8",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/fsync')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "on",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/full_page_writes')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "on",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/geqo')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "on",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/geqo_effort')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "5",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/geqo_generations')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "0",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/geqo_pool_size')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "0",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/geqo_seed')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "0",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/geqo_selection_bias')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "2",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/geqo_threshold')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "12",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/gin_fuzzy_search_limit')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "0",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/gin_pending_list_limit')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "4096",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/hash_mem_multiplier')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "2",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/hba_file')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "/datadrive/pg/data/pg_hba.conf",
				"source": "user-override"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/hot_standby')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "on",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/hot_standby_feedback')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "off",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/huge_page_size')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "0",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/huge_pages')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "try",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/ident_file')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "/datadrive/pg/data/pg_ident.conf",
				"source": "user-override"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/idle_in_transaction_session_timeout')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "0",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/idle_session_timeout')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "0",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/ignore_checksum_failure')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "off",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/ignore_invalid_pages')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "off",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/ignore_system_indexes')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "off",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/in_hot_standby')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "off",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/integer_datetimes')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "on",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/intelligent_tuning')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "off",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/intelligent_tuning.metric_targets')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "none",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/IntervalStyle')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "postgres",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/jit')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "off",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/jit_above_cost')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "100000",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/jit_debugging_support')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "off",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/jit_dump_bitcode')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "off",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/jit_expressions')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "on",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/jit_inline_above_cost')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "500000",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/jit_optimize_above_cost')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "500000",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/jit_profiling_support')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "off",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/jit_provider')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "llvmjit",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/jit_tuple_deforming')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "on",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/join_collapse_limit')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "8",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/krb_caseins_users')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "off",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/krb_server_keyfile')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/lc_messages')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "en_US.utf8",
				"source": "user-override"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/lc_monetary')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "en_US.utf-8",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/lc_numeric')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "en_US.utf-8",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/lc_time')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "en_US.utf8",
				"source": "user-override"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/listen_addresses')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "*",
				"source": "user-override"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/lo_compat_privileges')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "off",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/local_preload_libraries')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/lock_timeout')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "0",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/log_autovacuum_min_duration')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "-1",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/log_checkpoints')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "on",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/log_connections')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "on",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/log_destination')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "stderr",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/log_directory')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "log",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/log_disconnections')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "on",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/log_duration')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "off",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/log_error_verbosity')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "default",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/log_executor_stats')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "off",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/log_file_mode')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "0600",
				"source": "user-override"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/log_filename')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "postgresql-%Y-%m-%d_%H%M%S.log",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/log_hostname')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "off",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/log_line_prefix')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "%t-%c-",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/log_lock_waits')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "off",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/log_min_duration_sample')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "-1",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/log_min_duration_statement')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "-1",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/log_min_error_statement')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "error",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/log_min_messages')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "warning",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/log_parameter_max_length')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "-1",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/log_parameter_max_length_on_error')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "0",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/log_parser_stats')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "off",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/log_planner_stats')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "off",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/log_recovery_conflict_waits')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "off",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/log_replication_commands')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "on",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/log_rotation_age')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "60",
				"source": "user-override"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/log_rotation_size')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "102400",
				"source": "user-override"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/log_startup_progress_interval')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "10000",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/log_statement')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "none",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/log_statement_sample_rate')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "1",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/log_statement_stats')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "off",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/log_temp_files')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "-1",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/log_timezone')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "UTC",
				"source": "user-override"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/log_transaction_sample_rate')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "0",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/log_truncate_on_rotation')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "off",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/logfiles.download_enable')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "off",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/logfiles.retention_days')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "3",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/logging_collector')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "off",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/logical_decoding_work_mem')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "65536",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/maintenance_io_concurrency')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "10",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/maintenance_work_mem')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "216064",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/max_connections')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "859",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/max_files_per_process')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "1000",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/max_function_args')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "100",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/max_identifier_length')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "63",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/max_index_keys')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "32",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/max_locks_per_transaction')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "64",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/max_logical_replication_workers')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "4",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/max_parallel_apply_workers_per_subscription')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "2",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/max_parallel_maintenance_workers')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "2",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/max_parallel_workers')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "8",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/max_parallel_workers_per_gather')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "2",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/max_pred_locks_per_page')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "2",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/max_pred_locks_per_relation')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "-2",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/max_pred_locks_per_transaction')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "64",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/max_prepared_transactions')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "0",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/max_replication_slots')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "10",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/max_slot_wal_keep_size')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "-1",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/max_stack_depth')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "2048",
				"source": "user-override"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/max_standby_archive_delay')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "30000",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/max_standby_streaming_delay')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "30000",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/max_sync_workers_per_subscription')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "2",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/max_wal_senders')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "10",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/max_wal_size')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "12288",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/max_worker_processes')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "8",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/metrics.autovacuum_diagnostics')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "off",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/metrics.collector_database_activity')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "off",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/metrics.pgbouncer_diagnostics')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "off",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/min_dynamic_shared_memory')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "0",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/min_parallel_index_scan_size')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "64",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/min_parallel_table_scan_size')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "1024",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/min_wal_size')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "80",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/multixact_member_buffers')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "32",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/multixact_offset_buffers')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "16",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/notify_buffers')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "16",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/parallel_leader_participation')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "on",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/parallel_setup_cost')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "1000",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/parallel_tuple_cost')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "0.1",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/password_encryption')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "scram-sha-256",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/pg_partman_bgw.analyze')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "off",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/pg_partman_bgw.dbname')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/pg_partman_bgw.interval')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "3600",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/pg_partman_bgw.jobmon')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "on",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/pg_partman_bgw.role')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/pg_qs.interval_length_minutes')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "15",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/pg_qs.is_enabled_fs')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "on",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/pg_qs.max_plan_size')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "7500",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/pg_qs.max_query_text_length')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "6000",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/pg_qs.parameters_capture_mode')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "capture_parameterless_only",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/pg_qs.query_capture_mode')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "none",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/pg_qs.retention_period_in_days')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "7",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/pg_qs.store_query_plans')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "off",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/pg_qs.track_utility')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "on",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/pg_stat_statements.max')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "5000",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/pg_stat_statements.save')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "on",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/pg_stat_statements.track')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "none",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/pg_stat_statements.track_planning')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "off",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/pg_stat_statements.track_utility')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "on",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/pgaadauth.enable_group_sync')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "off",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/pgaudit.log')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "none",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/pgaudit.log_catalog')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "on",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/pgaudit.log_client')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "off",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/pgaudit.log_level')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "log",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/pgaudit.log_parameter')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "off",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/pgaudit.log_relation')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "off",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/pgaudit.log_statement_once')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "off",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/pgaudit.role')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/pgbouncer.enabled')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "false",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/pglogical.batch_inserts')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "on",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/pglogical.conflict_log_level')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "log",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/pglogical.conflict_resolution')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "apply_remote",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/pglogical.use_spi')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "off",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/pgms_stats.is_enabled_fs')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "on",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/pgms_wait_sampling.history_period')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "100",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/pgms_wait_sampling.is_enabled_fs')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "on",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/pgms_wait_sampling.query_capture_mode')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "none",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/plan_cache_mode')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "auto",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/port')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "5432",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/post_auth_delay')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "0",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/postgis.gdal_enabled_drivers')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "DISABLE_ALL",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/pre_auth_delay')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "0",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/primary_conninfo')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/primary_slot_name')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/quote_all_identifiers')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "off",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/random_page_cost')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "2",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/recovery_end_command')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/recovery_init_sync_method')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "fsync",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/recovery_min_apply_delay')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "0",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/recovery_prefetch')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "try",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/recovery_target')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/recovery_target_action')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "pause",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/recovery_target_inclusive')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "on",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/recovery_target_lsn')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/recovery_target_name')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/recovery_target_time')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/recovery_target_timeline')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "latest",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/recovery_target_xid')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/recursive_worktable_factor')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "10",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/remove_temp_files_after_crash')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "on",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/require_secure_transport')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "on",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/reserved_connections')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "5",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/restart_after_crash')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "on",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/restore_command')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/row_security')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "on",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/search_path')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "\"$user\", public",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/segment_size')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "131072",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/seq_page_cost')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "1",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/serializable_buffers')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "32",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/server_encoding')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "UTF8",
				"source": "user-override"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/server_version')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "17.5",
				"source": "user-override"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/server_version_num')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "170005",
				"source": "user-override"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/session_preload_libraries')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/session_replication_role')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "origin",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/shared_buffers')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "262144",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/shared_memory_size')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "2187",
				"source": "user-override"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/shared_memory_size_in_huge_pages')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "1094",
				"source": "user-override"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/shared_memory_type')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "mmap",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/shared_preload_libraries')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "pg_cron,pg_stat_statements",
				"source": "user-override"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/ssl')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "on",
				"source": "user-override"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/ssl_ca_file')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "/datadrive/certs/ca.pem",
				"source": "user-override"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/ssl_cert_file')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "/datadrive/certs/cert.pem",
				"source": "user-override"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/ssl_ciphers')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256",
				"source": "user-override"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/ssl_crl_dir')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/ssl_crl_file')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/ssl_dh_params_file')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/ssl_ecdh_curve')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "prime256v1",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/ssl_key_file')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "/datadrive/certs/key.pem",
				"source": "user-override"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/ssl_library')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "OpenSSL",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/ssl_max_protocol_version')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/ssl_min_protocol_version')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "TLSv1.2",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/ssl_passphrase_command')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/ssl_passphrase_command_supports_reload')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "off",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/ssl_prefer_server_ciphers')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "on",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/standard_conforming_strings')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "on",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/statement_timeout')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "0",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/stats_fetch_consistency')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "cache",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/subtransaction_buffers')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "512",
				"source": "user-override"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/superuser_reserved_connections')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "10",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/sync_replication_slots')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "off",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/synchronize_seqscans')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "on",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/synchronous_commit')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "on",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/synchronous_standby_names')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/syslog_facility')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "local0",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/syslog_ident')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "postgres",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/syslog_sequence_numbers')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "on",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/syslog_split_messages')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "on",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/tcp_keepalives_count')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "9",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/tcp_keepalives_idle')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "120",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/tcp_keepalives_interval')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "30",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/tcp_user_timeout')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "0",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/temp_buffers')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "1024",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/temp_file_limit')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "-1",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/temp_tablespaces')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "temptblspace",
				"source": "user-override"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/TimeZone')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "UTC",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/timezone_abbreviations')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "Default",
				"source": "user-override"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/trace_notify')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "off",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/trace_sort')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "off",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/track_activities')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "on",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/track_activity_query_size')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "1024",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/track_commit_timestamp')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "off",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/track_counts')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "on",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/track_functions')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "none",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/track_io_timing')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "off",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/track_wal_io_timing')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "off",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/transaction_buffers')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "512",
				"source": "user-override"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/transaction_deferrable')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "off",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/transaction_isolation')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "read committed",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/transaction_read_only')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "off",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/transaction_timeout')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "0",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/transform_null_equals')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "off",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/unix_socket_directories')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "/tmp,/tmp/tuning_sockets",
				"source": "user-override"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/unix_socket_group')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/unix_socket_permissions')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "0777",
				"source": "user-override"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/update_process_title')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "on",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/vacuum_buffer_usage_limit')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "2048",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/vacuum_cost_delay')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "0",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/vacuum_cost_limit')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "200",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/vacuum_cost_page_dirty')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "20",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/vacuum_cost_page_hit')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "1",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/vacuum_cost_page_miss')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "10",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/vacuum_failsafe_age')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "1600000000",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/vacuum_freeze_min_age')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "50000000",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/vacuum_freeze_table_age')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "150000000",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/vacuum_multixact_failsafe_age')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "1600000000",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/vacuum_multixact_freeze_min_age')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "5000000",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/vacuum_multixact_freeze_table_age')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "150000000",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/wal_block_size')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "8192",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/wal_buffers')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "2048",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/wal_compression')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "on",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/wal_consistency_checking')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/wal_decode_buffer_size')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "524288",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/wal_init_zero')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "on",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/wal_keep_size')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "400",
				"source": "user-override"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/wal_level')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "replica",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/wal_log_hints')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "off",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/wal_receiver_create_temp_slot')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "off",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/wal_receiver_status_interval')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "10",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/wal_receiver_timeout')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "60000",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/wal_recycle')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "on",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/wal_retrieve_retry_interval')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "5000",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/wal_segment_size')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "16777216",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/wal_sender_timeout')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "60000",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/wal_skip_threshold')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "2048",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/wal_sync_method')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "fdatasync",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/wal_writer_delay')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "200",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/wal_writer_flush_after')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "128",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/work_mem')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "4096",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/xmlbinary')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "base64",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/xmloption')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "content",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/zero_damaged_pages')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"value": "off",
				"source": "system-default"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/databases",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/azure_maintenance')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"charset": "UTF8",
				"collation": "en_US.utf8"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/databases",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/azure_sys')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"charset": "UTF8",
				"collation": "en_US.utf8"
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers/databases",
			"apiVersion": "2025-01-01-preview",
			"name": "[concat(parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'), '/postgres')]",
			"dependsOn": [
				"[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name'))]"
			],
			"properties": {
				"charset": "UTF8",
				"collation": "en_US.utf8"
			}
		},
		{
			"type": "Microsoft.Network/networkSecurityGroups/securityRules",
			"apiVersion": "2024-07-01",
			"name": "[concat(parameters('networkSecurityGroups_dbSubnet_nsg_name'), '/Allow-Postgres-From-WebSubnet')]",
			"dependsOn": [
				"[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_dbSubnet_nsg_name'))]"
			],
			"properties": {
				"protocol": "Tcp",
				"sourcePortRange": "*",
				"destinationPortRange": "5432",
				"sourceAddressPrefix": "10.0.1.0/24",
				"destinationAddressPrefix": "10.0.0.0/24",
				"access": "Allow",
				"priority": 100,
				"direction": "Inbound",
				"sourcePortRanges": [],
				"destinationPortRanges": [],
				"sourceAddressPrefixes": [],
				"destinationAddressPrefixes": []
			}
		},
		{
			"type": "Microsoft.Network/privateDnsZones/A",
			"apiVersion": "2024-06-01",
			"name": "[concat(parameters('privateDnsZones_mystartup_postgres_private_postgres_database_azure_com_name'), '/b15ed2f1990f')]",
			"dependsOn": [
				"[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_mystartup_postgres_private_postgres_database_azure_com_name'))]"
			],
			"properties": {
				"ttl": 30,
				"aRecords": [
					{
						"ipv4Address": "10.0.0.4"
					}
				]
			}
		},
		{
			"type": "Microsoft.Network/privateDnsZones/SOA",
			"apiVersion": "2024-06-01",
			"name": "[concat(parameters('privateDnsZones_mystartup_postgres_private_postgres_database_azure_com_name'), '/@')]",
			"dependsOn": [
				"[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_mystartup_postgres_private_postgres_database_azure_com_name'))]"
			],
			"properties": {
				"ttl": 3600,
				"soaRecord": {
					"email": "azureprivatedns-host.microsoft.com",
					"expireTime": 2419200,
					"host": "azureprivatedns.net",
					"minimumTtl": 10,
					"refreshTime": 3600,
					"retryTime": 300,
					"serialNumber": 1
				}
			}
		},
		{
			"type": "Microsoft.Network/virtualNetworks",
			"apiVersion": "2024-07-01",
			"name": "[parameters('virtualNetworks_myStartupVNet_name')]",
			"location": "westeurope",
			"dependsOn": [
				"[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_dbSubnet_nsg_name'))]"
			],
			"properties": {
				"addressSpace": {
					"addressPrefixes": [
						"10.0.0.0/16"
					]
				},
				"privateEndpointVNetPolicies": "Disabled",
				"subnets": [
					{
						"name": "webappSubnet",
						"id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_myStartupVNet_name'), 'webappSubnet')]",
						"properties": {
							"addressPrefix": "10.0.1.0/24",
							"delegations": [
								{
									"name": "0",
									"id": "[concat(resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_myStartupVNet_name'), 'webappSubnet'), '/delegations/0')]",
									"properties": {
										"serviceName": "Microsoft.Web/serverFarms"
									},
									"type": "Microsoft.Network/virtualNetworks/subnets/delegations"
								}
							],
							"privateEndpointNetworkPolicies": "Disabled",
							"privateLinkServiceNetworkPolicies": "Enabled"
						},
						"type": "Microsoft.Network/virtualNetworks/subnets"
					},
					{
						"name": "dbSubnet",
						"id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_myStartupVNet_name'), 'dbSubnet')]",
						"properties": {
							"addressPrefix": "10.0.0.0/24",
							"networkSecurityGroup": {
								"id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_dbSubnet_nsg_name'))]"
							},
							"serviceEndpoints": [
								{
									"service": "Microsoft.Storage",
									"locations": [
										"westeurope",
										"northeurope"
									]
								}
							],
							"delegations": [
								{
									"name": "Microsoft.DBforPostgreSQL/flexibleServers",
									"id": "[concat(resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_myStartupVNet_name'), 'dbSubnet'), '/delegations/Microsoft.DBforPostgreSQL/flexibleServers')]",
									"properties": {
										"serviceName": "Microsoft.DBforPostgreSQL/flexibleServers"
									},
									"type": "Microsoft.Network/virtualNetworks/subnets/delegations"
								}
							],
							"privateEndpointNetworkPolicies": "Disabled",
							"privateLinkServiceNetworkPolicies": "Enabled"
						},
						"type": "Microsoft.Network/virtualNetworks/subnets"
					}
				],
				"virtualNetworkPeerings": [],
				"enableDdosProtection": false
			}
		},
		{
			"type": "Microsoft.Network/virtualNetworks/subnets",
			"apiVersion": "2024-07-01",
			"name": "[concat(parameters('virtualNetworks_myStartupVNet_name'), '/webappSubnet')]",
			"dependsOn": [
				"[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_myStartupVNet_name'))]"
			],
			"properties": {
				"addressPrefix": "10.0.1.0/24",
				"delegations": [
					{
						"name": "0",
						"id": "[concat(resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_myStartupVNet_name'), 'webappSubnet'), '/delegations/0')]",
						"properties": {
							"serviceName": "Microsoft.Web/serverFarms"
						},
						"type": "Microsoft.Network/virtualNetworks/subnets/delegations"
					}
				],
				"privateEndpointNetworkPolicies": "Disabled",
				"privateLinkServiceNetworkPolicies": "Enabled"
			}
		},
		{
			"type": "Microsoft.Storage/storageAccounts/blobServices",
			"apiVersion": "2025-01-01",
			"name": "[concat(parameters('storageAccounts_mystartupstorageskb_name'), '/default')]",
			"dependsOn": [
				"[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_mystartupstorageskb_name'))]"
			],
			"sku": {
				"name": "Standard_LRS",
				"tier": "Standard"
			},
			"properties": {
				"cors": {
					"corsRules": []
				},
				"deleteRetentionPolicy": {
					"allowPermanentDelete": false,
					"enabled": false
				}
			}
		},
		{
			"type": "Microsoft.Storage/storageAccounts/fileServices",
			"apiVersion": "2025-01-01",
			"name": "[concat(parameters('storageAccounts_mystartupstorageskb_name'), '/default')]",
			"dependsOn": [
				"[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_mystartupstorageskb_name'))]"
			],
			"sku": {
				"name": "Standard_LRS",
				"tier": "Standard"
			},
			"properties": {
				"protocolSettings": {
					"smb": {}
				},
				"cors": {
					"corsRules": []
				},
				"shareDeleteRetentionPolicy": {
					"enabled": true,
					"days": 7
				}
			}
		},
		{
			"type": "Microsoft.Storage/storageAccounts/queueServices",
			"apiVersion": "2025-01-01",
			"name": "[concat(parameters('storageAccounts_mystartupstorageskb_name'), '/default')]",
			"dependsOn": [
				"[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_mystartupstorageskb_name'))]"
			],
			"properties": {
				"cors": {
					"corsRules": []
				}
			}
		},
		{
			"type": "Microsoft.Storage/storageAccounts/tableServices",
			"apiVersion": "2025-01-01",
			"name": "[concat(parameters('storageAccounts_mystartupstorageskb_name'), '/default')]",
			"dependsOn": [
				"[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_mystartupstorageskb_name'))]"
			],
			"properties": {
				"cors": {
					"corsRules": []
				}
			}
		},
		{
			"type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
			"apiVersion": "2024-11-01",
			"name": "[concat(parameters('sites_myexpressappbackendskb_name'), '/ftp')]",
			"location": "West Europe",
			"dependsOn": [
				"[resourceId('Microsoft.Web/sites', parameters('sites_myexpressappbackendskb_name'))]"
			],
			"properties": {
				"allow": true
			}
		},
		{
			"type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
			"apiVersion": "2024-11-01",
			"name": "[concat(parameters('sites_myexpressappbackendskb_name'), '/scm')]",
			"location": "West Europe",
			"dependsOn": [
				"[resourceId('Microsoft.Web/sites', parameters('sites_myexpressappbackendskb_name'))]"
			],
			"properties": {
				"allow": true
			}
		},
		{
			"type": "Microsoft.Web/sites/config",
			"apiVersion": "2024-11-01",
			"name": "[concat(parameters('sites_myexpressappbackendskb_name'), '/web')]",
			"location": "West Europe",
			"dependsOn": [
				"[resourceId('Microsoft.Web/sites', parameters('sites_myexpressappbackendskb_name'))]"
			],
			"properties": {
				"numberOfWorkers": 1,
				"defaultDocuments": [
					"Default.htm",
					"Default.html",
					"Default.asp",
					"index.htm",
					"index.html",
					"iisstart.htm",
					"default.aspx",
					"index.php",
					"hostingstart.html"
				],
				"netFrameworkVersion": "v4.0",
				"linuxFxVersion": "DOCKER|mcr.microsoft.com/azuredocs/hello-world:latest",
				"requestTracingEnabled": false,
				"remoteDebuggingEnabled": false,
				"remoteDebuggingVersion": "VS2022",
				"httpLoggingEnabled": false,
				"acrUseManagedIdentityCreds": false,
				"logsDirectorySizeLimit": 35,
				"detailedErrorLoggingEnabled": false,
				"publishingUsername": "$myexpressappbackendskb",
				"scmType": "None",
				"use32BitWorkerProcess": true,
				"webSocketsEnabled": false,
				"alwaysOn": true,
				"managedPipelineMode": "Integrated",
				"virtualApplications": [
					{
						"virtualPath": "/",
						"physicalPath": "site\\wwwroot",
						"preloadEnabled": true
					}
				],
				"loadBalancing": "LeastRequests",
				"experiments": {
					"rampUpRules": []
				},
				"autoHealEnabled": false,
				"vnetName": "194643d9-ac39-4f96-b3e9-8ec43773696e_webappSubnet",
				"vnetRouteAllEnabled": true,
				"vnetPrivatePortsCount": 0,
				"localMySqlEnabled": false,
				"ipSecurityRestrictions": [
					{
						"ipAddress": "Any",
						"action": "Allow",
						"priority": 2147483647,
						"name": "Allow all",
						"description": "Allow all access"
					}
				],
				"scmIpSecurityRestrictions": [
					{
						"ipAddress": "Any",
						"action": "Allow",
						"priority": 2147483647,
						"name": "Allow all",
						"description": "Allow all access"
					}
				],
				"scmIpSecurityRestrictionsUseMain": false,
				"http20Enabled": true,
				"minTlsVersion": "1.2",
				"scmMinTlsVersion": "1.2",
				"ftpsState": "FtpsOnly",
				"preWarmedInstanceCount": 0,
				"elasticWebAppScaleLimit": 0,
				"functionsRuntimeScaleMonitoringEnabled": false,
				"minimumElasticInstanceCount": 1,
				"azureStorageAccounts": {},
				"http20ProxyFlag": 0
			}
		},
		{
			"type": "Microsoft.Web/sites/hostNameBindings",
			"apiVersion": "2024-11-01",
			"name": "[concat(parameters('sites_myexpressappbackendskb_name'), '/', parameters('sites_myexpressappbackendskb_name'), '.azurewebsites.net')]",
			"location": "West Europe",
			"dependsOn": [
				"[resourceId('Microsoft.Web/sites', parameters('sites_myexpressappbackendskb_name'))]"
			],
			"properties": {
				"siteName": "myexpressappbackendskb",
				"hostNameType": "Verified"
			}
		},
		{
			"type": "Microsoft.Cdn/profiles/origingroups/origins",
			"apiVersion": "2025-04-15",
			"name": "[concat(parameters('profiles_front_door_profil_name'), '/default-origin-group/default-origin')]",
			"dependsOn": [
				"[resourceId('Microsoft.Cdn/profiles/origingroups', parameters('profiles_front_door_profil_name'), 'default-origin-group')]",
				"[resourceId('Microsoft.Cdn/profiles', parameters('profiles_front_door_profil_name'))]"
			],
			"properties": {
				"hostName": "myexpressappbackendskb.azurewebsites.net",
				"httpPort": 80,
				"httpsPort": 443,
				"originHostHeader": "myexpressappbackendskb.azurewebsites.net",
				"priority": 1,
				"weight": 1000,
				"enabledState": "Enabled",
				"enforceCertificateNameCheck": true
			}
		},
		{
			"type": "Microsoft.DBforPostgreSQL/flexibleServers",
			"apiVersion": "2025-01-01-preview",
			"name": "[parameters('flexibleServers_mypgserver_rg_24_09_on_keilbach_steffen_name')]",
			"location": "West Europe",
			"dependsOn": [
				"[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_myStartupVNet_name'), 'dbSubnet')]",
				"[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_mystartup_postgres_private_postgres_database_azure_com_name'))]"
			],
			"sku": {
				"name": "Standard_D2ds_v5",
				"tier": "GeneralPurpose"
			},
			"properties": {
				"replica": {
					"role": "Primary"
				},
				"storage": {
					"iops": 500,
					"tier": "P10",
					"storageSizeGB": 128,
					"autoGrow": "Disabled"
				},
				"network": {
					"publicNetworkAccess": "Disabled",
					"delegatedSubnetResourceId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_myStartupVNet_name'), 'dbSubnet')]",
					"privateDnsZoneArmResourceId": "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_mystartup_postgres_private_postgres_database_azure_com_name'))]"
				},
				"dataEncryption": {
					"type": "SystemManaged"
				},
				"authConfig": {
					"activeDirectoryAuth": "Disabled",
					"passwordAuth": "Enabled"
				},
				"version": "17",
				"administratorLogin": "pgadmin",
				"availabilityZone": "3",
				"backup": {
					"backupRetentionDays": 7,
					"geoRedundantBackup": "Disabled"
				},
				"highAvailability": {
					"mode": "Disabled"
				},
				"maintenanceWindow": {
					"customWindow": "Disabled",
					"dayOfWeek": 0,
					"startHour": 0,
					"startMinute": 0
				},
				"replicationRole": "Primary"
			}
		},
		{
			"type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
			"apiVersion": "2024-06-01",
			"name": "[concat(parameters('privateDnsZones_mystartup_postgres_private_postgres_database_azure_com_name'), '/mystartupvnet-link')]",
			"location": "global",
			"dependsOn": [
				"[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_mystartup_postgres_private_postgres_database_azure_com_name'))]",
				"[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_myStartupVNet_name'))]"
			],
			"properties": {
				"registrationEnabled": false,
				"virtualNetwork": {
					"id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_myStartupVNet_name'))]"
				}
			}
		},
		{
			"type": "Microsoft.Network/virtualNetworks/subnets",
			"apiVersion": "2024-07-01",
			"name": "[concat(parameters('virtualNetworks_myStartupVNet_name'), '/dbSubnet')]",
			"dependsOn": [
				"[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_myStartupVNet_name'))]",
				"[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_dbSubnet_nsg_name'))]"
			],
			"properties": {
				"addressPrefix": "10.0.0.0/24",
				"networkSecurityGroup": {
					"id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_dbSubnet_nsg_name'))]"
				},
				"serviceEndpoints": [
					{
						"service": "Microsoft.Storage",
						"locations": [
							"westeurope",
							"northeurope"
						]
					}
				],
				"delegations": [
					{
						"name": "Microsoft.DBforPostgreSQL/flexibleServers",
						"id": "[concat(resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_myStartupVNet_name'), 'dbSubnet'), '/delegations/Microsoft.DBforPostgreSQL/flexibleServers')]",
						"properties": {
							"serviceName": "Microsoft.DBforPostgreSQL/flexibleServers"
						},
						"type": "Microsoft.Network/virtualNetworks/subnets/delegations"
					}
				],
				"privateEndpointNetworkPolicies": "Disabled",
				"privateLinkServiceNetworkPolicies": "Enabled"
			}
		},
		{
			"type": "Microsoft.Storage/storageAccounts/blobServices/containers",
			"apiVersion": "2025-01-01",
			"name": "[concat(parameters('storageAccounts_mystartupstorageskb_name'), '/default/$web')]",
			"dependsOn": [
				"[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_mystartupstorageskb_name'), 'default')]",
				"[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_mystartupstorageskb_name'))]"
			],
			"properties": {
				"immutableStorageWithVersioning": {
					"enabled": false
				},
				"defaultEncryptionScope": "$account-encryption-key",
				"denyEncryptionScopeOverride": false,
				"publicAccess": "None"
			}
		},
		{
			"type": "Microsoft.Web/sites",
			"apiVersion": "2024-11-01",
			"name": "[parameters('sites_myexpressappbackendskb_name')]",
			"location": "West Europe",
			"dependsOn": [
				"[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_myAppServicePlan_name'))]",
				"[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_myStartupVNet_name'), 'webappSubnet')]"
			],
			"kind": "app,linux,container",
			"properties": {
				"enabled": true,
				"hostNameSslStates": [
					{
						"name": "[concat(parameters('sites_myexpressappbackendskb_name'), '.azurewebsites.net')]",
						"sslState": "Disabled",
						"hostType": "Standard"
					},
					{
						"name": "[concat(parameters('sites_myexpressappbackendskb_name'), '.scm.azurewebsites.net')]",
						"sslState": "Disabled",
						"hostType": "Repository"
					}
				],
				"serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_myAppServicePlan_name'))]",
				"reserved": true,
				"isXenon": false,
				"hyperV": false,
				"dnsConfiguration": {},
				"outboundVnetRouting": {
					"allTraffic": false,
					"applicationTraffic": true,
					"contentShareTraffic": false,
					"imagePullTraffic": false,
					"backupRestoreTraffic": false
				},
				"siteConfig": {
					"numberOfWorkers": 1,
					"linuxFxVersion": "DOCKER|mcr.microsoft.com/azuredocs/hello-world:latest",
					"acrUseManagedIdentityCreds": false,
					"alwaysOn": true,
					"http20Enabled": true,
					"functionAppScaleLimit": 0,
					"minimumElasticInstanceCount": 1
				},
				"scmSiteAlsoStopped": false,
				"clientAffinityEnabled": true,
				"clientAffinityProxyEnabled": false,
				"clientCertEnabled": false,
				"clientCertMode": "Required",
				"hostNamesDisabled": false,
				"ipMode": "IPv4",
				"customDomainVerificationId": "30E35521DFFE899F7895C1DFA1E7547FDFCBD45C5998C45DE88558365224708F",
				"containerSize": 0,
				"dailyMemoryTimeQuota": 0,
				"httpsOnly": false,
				"endToEndEncryptionEnabled": false,
				"redundancyMode": "None",
				"publicNetworkAccess": "Enabled",
				"storageAccountRequired": false,
				"virtualNetworkSubnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_myStartupVNet_name'), 'webappSubnet')]",
				"keyVaultReferenceIdentity": "SystemAssigned"
			}
		},
		{
			"type": "Microsoft.Web/sites/virtualNetworkConnections",
			"apiVersion": "2024-11-01",
			"name": "[concat(parameters('sites_myexpressappbackendskb_name'), '/194643d9-ac39-4f96-b3e9-8ec43773696e_webappSubnet')]",
			"location": "West Europe",
			"dependsOn": [
				"[resourceId('Microsoft.Web/sites', parameters('sites_myexpressappbackendskb_name'))]",
				"[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_myStartupVNet_name'), 'webappSubnet')]"
			],
			"properties": {
				"vnetResourceId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_myStartupVNet_name'), 'webappSubnet')]",
				"isSwift": true
			}
		},
		{
			"type": "Microsoft.Cdn/profiles/afdendpoints/routes",
			"apiVersion": "2025-04-15",
			"name": "[concat(parameters('profiles_front_door_profil_name'), '/web-app-skb/default-route')]",
			"dependsOn": [
				"[resourceId('Microsoft.Cdn/profiles/afdendpoints', parameters('profiles_front_door_profil_name'), 'web-app-skb')]",
				"[resourceId('Microsoft.Cdn/profiles', parameters('profiles_front_door_profil_name'))]",
				"[resourceId('Microsoft.Cdn/profiles/origingroups', parameters('profiles_front_door_profil_name'), 'default-origin-group')]"
			],
			"properties": {
				"customDomains": [],
				"originGroup": {
					"id": "[resourceId('Microsoft.Cdn/profiles/origingroups', parameters('profiles_front_door_profil_name'), 'default-origin-group')]"
				},
				"ruleSets": [],
				"supportedProtocols": [
					"Http",
					"Https"
				],
				"patternsToMatch": [
					"/*"
				],
				"forwardingProtocol": "MatchRequest",
				"linkToDefaultDomain": "Enabled",
				"httpsRedirect": "Enabled",
				"enabledState": "Enabled"
			}
		},
		{
			"type": "Microsoft.Cdn/profiles/securitypolicies",
			"apiVersion": "2025-04-15",
			"name": "[concat(parameters('profiles_front_door_profil_name'), '/1946cf90-dfc9-4f79-a8a8-9c2f98531526')]",
			"dependsOn": [
				"[resourceId('Microsoft.Cdn/profiles', parameters('profiles_front_door_profil_name'))]",
				"[resourceId('Microsoft.Network/frontdoorwebapplicationfirewallpolicies', parameters('frontdoorwebapplicationfirewallpolicies_webappwaf_name'))]",
				"[resourceId('Microsoft.Cdn/profiles/afdendpoints', parameters('profiles_front_door_profil_name'), 'web-app-skb')]"
			],
			"properties": {
				"parameters": {
					"wafPolicy": {
						"id": "[resourceId('Microsoft.Network/frontdoorwebapplicationfirewallpolicies', parameters('frontdoorwebapplicationfirewallpolicies_webappwaf_name'))]"
					},
					"type": "WebApplicationFirewall",
					"associations": [
						{
							"domains": [
								{
									"id": "[resourceId('Microsoft.Cdn/profiles/afdendpoints', parameters('profiles_front_door_profil_name'), 'web-app-skb')]"
								}
							],
							"patternsToMatch": [
								"/*"
							]
						}
					]
				}
			}
		}
	]
}
